
        package com.github.dapeng.soa.scala.service

import com.github.dapeng.core.{Processor, Service}
        import com.github.dapeng.core.SoaGlobalTransactional
        import scala.concurrent.Future

        /**
         * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

        * 
        **/
        @Service(name ="com.github.dapeng.soa.service.PrintService" , version = "1.0.0")
        @Processor(className = "com.github.dapeng.soa.scala.PrintServiceAsyncCodec$Processor")
        trait PrintServiceAsync {
        
            /**
            * 
            **/
            
            @throws[com.github.dapeng.core.SoaException]
            def print(
             timeout : Long): Future[Unit]

          
            /**
            * 
            **/
            
            @throws[com.github.dapeng.core.SoaException]
            def printInfo(
            info: com.github.dapeng.soa.scala.info.Info , timeout : Long): Future[String]

          
            /**
            * 
            **/
            
            @throws[com.github.dapeng.core.SoaException]
            def printInfo2(
            name: String , timeout : Long): Future[String]

          
            /**
            * 
            **/
            
            @throws[com.github.dapeng.core.SoaException]
            def printInfo3(
             timeout : Long): Future[String]

          
      }
      